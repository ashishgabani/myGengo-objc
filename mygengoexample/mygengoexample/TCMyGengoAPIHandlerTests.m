//
//  TCMyGengoAPIHandlerTests.m
//  mygengoexample
//
//  Copyright 2012 Christopher Trott
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

#import "TCMyGengoAPIHandlerTests.h"

#define SANDBOX_PUBLIC_KEY @"YOUR-KEY-HERE"
#define SANDBOX_PRIVATE_KEY @"YOUR-KEY-HERE"

@implementation TCMyGengoAPIHandlerTests

- (id)init{
  if ((self = [super init])){
    [self runTests];
  }
  return self;
}

- (void)runTests{
  TCMyGengoAPICredentials *Credentials = [TCMyGengoAPICredentials sharedCredentials];
  [Credentials setCredentialsWithPublicKey:SANDBOX_PUBLIC_KEY privateKey:SANDBOX_PRIVATE_KEY isSandboxed:YES];
  TCMyGengoAPIHandler *Handler = [[TCMyGengoAPIHandler alloc] initWithDelegate:self];
  
  NIDASSERT([[Credentials publicKey] isEqualToString:SANDBOX_PUBLIC_KEY]);
  NIDASSERT([[Credentials privateKey] isEqualToString:SANDBOX_PRIVATE_KEY]);
  NIDASSERT([Credentials isSandboxed] == YES);
  
  // Testing API Signature function vs. the one generated by Ruby
  NSString *TS = @"1339882478"; //[Handler formattedTimestamp];
  NIDINFO(@"Timestamp: %@", TS);
  NIDINFO(@"API Signature: %@",[Handler apiSignatureWithTimestamp:TS]);
  NIDASSERT([[Handler apiSignatureWithTimestamp:TS] isEqualToString:@"747679f918caa870382a37c9effdd149ff5d1229"]);
  
  // Test Job 1 - 209571 - group 16522
  NSDictionary *Job1 = [NSDictionary dictionaryWithObjectsAndKeys:@"text", @"type", 
                       @"Test Slug", @"slug", 
                       @"Hallo zusammen", @"body_src", 
                       @"de", @"lc_src", 
                       @"en", @"lc_tgt", 
                       @"standard", @"tier", nil];
  
  // Test Job 2 - ------
  NSDictionary *Job2 = [NSDictionary dictionaryWithObjectsAndKeys:@"text", @"type", 
                       @"Nice", @"slug", 
                       @"Nice to meet you", @"body_src", 
                       @"en", @"lc_src", 
                       @"ja", @"lc_tgt", 
                       @"standard", @"tier", nil];
  
  // Test Job 3 - 209572
  NSDictionary *Job3 = [NSDictionary dictionaryWithObjectsAndKeys:@"text", @"type", 
                        @"Nice", @"slug", 
                        @"Sprekin ze Deutch", @"body_src", 
                        @"de", @"lc_src", 
                        @"en", @"lc_tgt", 
                        @"standard", @"tier", nil];
  // Test Jobs Array
  NSArray *Jobs = [NSArray arrayWithObjects:Job1, Job2, nil];
  NSArray *JobsGroupable = [NSArray arrayWithObjects:Job1, Job3, nil];
    
  // Use this GET call to step through the GET stack.
  //[Handler getAccountStats];
  
  //[Handler getAccountBalance];
  
  //[Handler getServiceLanguages];
  
  //[Handler getServiceLanguagePairs:[NSDictionary dictionaryWithObject:@"en" forKey:@"lc_src"]];
  
  //[Handler getServiceLanguagePairs:[NSDictionary dictionaryWithObject:@"1" forKey:@"id"]];
  
  
  //[Handler getTranslationJob:[NSDictionary dictionaryWithObjectsAndKeys:@"209572", @"id", @"0", @"pre_mt", nil]];
  
  //[Handler getTranslationJobs:[NSDictionary dictionaryWithObjectsAndKeys:[NSArray arrayWithObjects:@"1",@"2", @"3", nil], @"ids",  nil]];
  
  //[Handler postTranslationJob:[NSDictionary dictionaryWithObject:Job1 forKey:@"job"]];
  
  //[Handler postTranslationJobs:[NSDictionary dictionaryWithObject:Jobs forKey:@"jobs"]];
  //[Handler postTranslationJobs:[NSDictionary dictionaryWithObjectsAndKeys:Jobs, @"jobs", @"1", @"as_group", nil]]; // returns error
  //[Handler postTranslationJobs:[NSDictionary dictionaryWithObjectsAndKeys:JobsGroupable, @"jobs", @"1", @"as_group", nil]];
  
  //[Handler postTranslationJobsForQuote:[NSDictionary dictionaryWithObject:Jobs forKey:@"jobs"]];
  
  //[Handler getTranslationJobGroup:[NSDictionary dictionaryWithObject:@"16522" forKey:@"id"]];
  
  //[Handler getTranslationJobFeedback:[NSDictionary dictionaryWithObject:@"209571" forKey:@"id"]];
  
  //[Handler postTranslationJobComment:[NSDictionary dictionaryWithObjectsAndKeys:@"direct comment.", @"body", @"209571", @"id", nil]];
  
  //[Handler getTranslationJobComments:[NSDictionary dictionaryWithObject:@"209571" forKey:@"id"]];

  //[Handler updateTranslationJob:[NSDictionary dictionaryWithObjectsAndKeys:@"209571", @"id", @"revise", @"action", @"Do it again.", @"comment", nil]];
  //[Handler updateTranslationJob:[NSDictionary dictionaryWithObjectsAndKeys:@"209571", @"id", @"approve", @"action", @"5", @"rating", @"Good job, translator", @"for_translator", @"Good job, staff", @"for_mygengo", @"1", @"public", nil]];
  //[Handler updateTranslationJob:[NSDictionary dictionaryWithObjectsAndKeys:@"209572", @"id", @"reject", @"action", @"quality", @"reason", @"Not your best", @"comment", @"AJTV", @"captcha", @"requeue", @"follow_up", nil]];
  
  //[Handler postTranslationJob:[NSDictionary dictionaryWithObject:Job2 forKey:@"job"]];
  //[Handler deleteTranslationJob:[NSDictionary dictionaryWithObject:@"209574" forKey:@"id"]];
  
  //[Handler getTranslationJobRevisions:[NSDictionary dictionaryWithObject:@"209571" forKey:@"id"]];
  
  //[Handler getTranslationJobRevision:[NSDictionary dictionaryWithObjectsAndKeys:@"209571", @"id", @"455336", @"rev_id", nil]];
}


- (void)myGengoAPIHandlerDidStartLoad: (TCMyGengoAPIHandler*)handler 
                         fromEndPoint: (NSString*)endpoint{
  NIDINFO(@"%@", endpoint);
  
}

- (void)myGengoAPIHandlerDidLoadDictionary: (TCMyGengoAPIHandler*)handler
                              fromEndPoint: (NSString*)endpoint
                        responseDictionary: (NSDictionary*)response{
  NIDINFO(@"%@ : %@", endpoint, response);
}

- (void)myGengoAPIHandlerDidFail: (TCMyGengoAPIHandler*)handler 
                    fromEndPoint: (NSString*)endpoint
                       withError: (NSError*)error{
  NIDINFO(@"%@ : %@", endpoint, error);
}

@end
